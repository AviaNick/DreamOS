(define mpn-add-dest 4)
(define mpn-add-src2 8)
(define mpn-add-src2size 12)
(define mpn-add-src1 16)
(define mpn-add-src1size 20)
(: 'calln_mpn_add)
  (mov (@ mpn-add-dest esp) edi)
  (mov (@ mpn-add-src2 esp) ebp)
  (mov (@ mpn-add-src2size esp) ecx)
  (mov (@ mpn-add-src1 esp) esi)
  (mov (@ mpn-add-src1size esp) ebx)
  (clc)
  (pushf)
(: 'mpn_add_loop)
  (dec ecx)
  (ifl
    (begin
      (dec ebx)
      (jl 'mpn_add_done)
      (lods)
      (clear edx))
    (begin
      (mov (@ ebp) edx)
      (add 4 ebp)
      (dec ebx)
      (ifl (clear eax) (lods))))
  (popf)
  (adc edx eax)
  (pushf)
  (stos)
  (jmp 'mpn_add_loop)
(: 'mpn_add_done)
  (clear eax)
  (popf)
  (ifc (inc eax))
  (ret)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(define mpn-sub-dest 4)
(define mpn-sub-src2 8)
(define mpn-sub-src2size 12)
(define mpn-sub-src1 16)
(define mpn-sub-src1size 20)
(: 'calln_mpn_sub)
  (mov (@ mpn-sub-dest esp) edi)
  (mov (@ mpn-sub-src2 esp) esi)
  (mov (@ mpn-sub-src2size esp) ebx)
  (mov (@ mpn-sub-src1 esp) ebp)
  (mov (@ mpn-sub-src1size esp) ecx)
  (clc)
  (pushf)
(: 'mpn_sub_loop)
  (dec ecx)
  (ifl
    (begin
      (dec ebx)
      (jl 'mpn_sub_done)
      (lods)
      (clear edx))
    (begin
      (mov (@ ebp) edx)
      (add 4 ebp)
      (dec ebx)
      (ifl (clear eax) (lods))))
  (popf)
  (sbb edx eax)
  (pushf)
  (stos)
  (jmp 'mpn_sub_loop)
(: 'mpn_sub_done)
  (clear eax)
  (popf)
  (ifc (inc eax))
  (ret)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(: 'calln_mpn_mul)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(: 'calln_mpn_divrem)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(: 'calln_mpn_gcd)
  (jmpl 'error_no_bignums)
